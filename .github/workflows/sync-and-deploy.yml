name: Sync Upstream and Deploy JSX Template

on:
  workflow_dispatch:
    inputs:
      force_sync:
        description: 'Force sync even if no changes'
        required: false
        default: false
        type: boolean

  schedule:
    - cron: '0 2 * * *'

  push:
    branches: [ main ]
    paths-ignore:
      - 'README.md'
      - 'docs/**'
      - '.github/workflows/lint.yml'
      - '.github/workflows/tests.yml'

env:
  UPSTREAM_REPO: 'laravel/react-starter-kit'
  DEV_REPO: 'aliziodev/react-jsx-starter-kit-dev'
  TEMPLATE_REPO: 'aliziodev/react-jsx-starter-kit'

jobs:
  sync-upstream:
    runs-on: ubuntu-latest
    outputs:
      has_changes: ${{ steps.check_changes.outputs.has_changes }}
      commit_sha: ${{ steps.sync.outputs.commit_sha }}

    steps:
    - name: Checkout development repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Configure Git
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"

    - name: Add upstream remote
      run: |
        git remote add upstream https://github.com/${{ env.UPSTREAM_REPO }}.git
        git fetch upstream

    - name: Check for upstream changes
      id: check_changes
      run: |
        UPSTREAM_SHA=$(git rev-parse upstream/main)
        CURRENT_SHA=$(git rev-parse HEAD)

        echo "Upstream SHA: $UPSTREAM_SHA"
        echo "Current SHA: $CURRENT_SHA"

        if [ "$UPSTREAM_SHA" != "$CURRENT_SHA" ] || [ "${{ github.event.inputs.force_sync }}" == "true" ]; then
          echo "has_changes=true" >> $GITHUB_OUTPUT
        else
          echo "has_changes=false" >> $GITHUB_OUTPUT
        fi

    - name: Sync with upstream
      id: sync
      if: steps.check_changes.outputs.has_changes == 'true'
      run: |
        echo "üîÑ Syncing with upstream..."

        SYNC_BRANCH="sync-upstream-$(date +%Y%m%d-%H%M%S)"
        git checkout -b $SYNC_BRANCH

        git merge --no-commit --no-ff upstream/main || {
          echo "‚ùå Merge conflicts detected. Manual intervention required."
          git merge --abort
          exit 1
        }

        git checkout main -- .github/workflows || true
        git add .
        git reset HEAD -- .github/workflows || true

        if git diff --cached --quiet; then
          echo "No changes to commit after excluding workflows"
        else
          git commit -m "Sync with upstream (workflows excluded)"
        fi

        git push origin $SYNC_BRANCH

        git checkout main
        git merge $SYNC_BRANCH --no-edit
        git push origin main

        git branch -d $SYNC_BRANCH
        git push origin --delete $SYNC_BRANCH

        COMMIT_SHA=$(git rev-parse HEAD)
        echo "commit_sha=$COMMIT_SHA" >> $GITHUB_OUTPUT

  convert-jsx:
    runs-on: ubuntu-latest
    needs: sync-upstream
    if: needs.sync-upstream.outputs.has_changes == 'true' || github.event_name == 'push'
    outputs:
      conversion_success: ${{ steps.convert.outputs.success }}

    steps:
    - name: Checkout updated repository
      uses: actions/checkout@v4
      with:
        ref: main
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run TypeScript to JSX conversion
      id: convert
      run: |
        node scripts/unified-converter.js
        echo "success=true" >> $GITHUB_OUTPUT

    - name: Upload conversion artifacts
      uses: actions/upload-artifact@v4
      with:
        name: jsx-conversion-output
        path: output/
        retention-days: 7

  deploy-template:
    runs-on: ubuntu-latest
    needs: [sync-upstream, convert-jsx]
    if: needs.convert-jsx.outputs.conversion_success == 'true'

    steps:
    - name: Download conversion artifacts
      uses: actions/download-artifact@v4
      with:
        name: jsx-conversion-output
        path: output/

    - name: Clone template repository
      env:
        TEMPLATE_TOKEN: ${{ secrets.TEMPLATE_REPO_TOKEN }}
      run: |
        git clone https://x-access-token:$TEMPLATE_TOKEN@github.com/${{ env.TEMPLATE_REPO }}.git template-repo
        cd template-repo
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"

    - name: Deploy to template repository
      run: |
        cd template-repo
        find . -mindepth 1 -maxdepth 1 ! -name '.git' -exec rm -rf {} +

        cp -r ../output/* .
        shopt -s dotglob
        cp -r ../output/.* . || true
        shopt -u dotglob

        rm -rf .github/workflows || true

        git add .
        if git diff --staged --quiet; then
          echo "‚ÑπÔ∏è No changes to deploy"
          exit 0
        fi

        git commit -m "Auto Deploy JSX template (${{ needs.sync-upstream.outputs.commit_sha }})"
        git push origin main
